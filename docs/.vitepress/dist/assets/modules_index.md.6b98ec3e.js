import{_ as e,o,c as t,e as s}from"./app.5664f18e.js";const f='{"title":"Config Modules","description":"","frontmatter":{},"headers":[],"relativePath":"modules/index.md","lastUpdated":1654533404000}',a={name:"modules/index.md"},i=s('<h1 id="config-modules" tabindex="-1">Config Modules <a class="header-anchor" href="#config-modules" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">0.X ALPHA STATUS</p><p>VueVentus is in a 0.x (<strong>alpha</strong>) status. It is in an post-experimental stage, and is sutable for rapid prototyping, but modules and components could change between minor releases. Additionally, there&#39;s more components and modules coming!</p></div><p>Config Modules keep reusable and customizable groups of non-color orientated Tailwind CSS classes for use in element, component, and layout levels of an application.</p><ul><li><a href="/vueventus/modules/anchors.html">Anchors</a></li><li><a href="/vueventus/modules/buttons.html">Buttons</a></li><li><a href="/vueventus/modules/text.html">Text</a></li><li><a href="/vueventus/modules/transitions.html">Transitions</a></li><li><a href="/vueventus/modules/vv-config.html">VvConfig</a></li><li><a href="/vueventus/modules/app-specific-config.html">App Specific Config</a></li></ul><div class="info custom-block"><p class="custom-block-title">ABOUT CONFIG MODULES</p><p>Config Modules are like the Tailwind CSS <code>@apply</code> directive, but are instead managed outside of the CSS scope. Config Modules rely on the Tailwind purge process, which allows JavaScript and JSON atomic classes data to be used throughout the JavaScript stack in a fully DRY way.</p></div>',5),n=[i];function l(d,c,u,r,p,m){return o(),t("div",null,n)}var _=e(a,[["render",l]]);export{f as __pageData,_ as default};
