import{_ as e}from"./chunks/DocsPackageVersion.39af907c.js";import{o as p,c as t,a as s,b as n,t as l,d as r,e as o}from"./app.8deca1e1.js";const c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),y={class:"danger custom-block"},F=s("p",{class:"custom-block-title"},"PLEASE BE AWARE",-1),d=s("strong",null,"drastically",-1),D=n(" reduced to a total possible number of "),m=s("strong",null,"4,096",-1),A=n(" values!"),u=s("p",null,[n("A really cool page to check out to visually see both the vastness and the finite amount of 3 digit hex code available is "),s("a",{href:"https://borderleft.com/toolbox/hex/",target:"_blank",rel:"noopener noreferrer"},"https://borderleft.com/toolbox/hex/"),n(".")],-1),h=s("h2",{id:"import",tabindex:"-1"},[n("Import "),s("a",{class:"header-anchor",href:"#import","aria-hidden":"true"},"#")],-1),C=o("",3),b=o("",4),E=JSON.parse('{"title":"randomHexShort() Helper Method","description":"","frontmatter":{"title":"randomHexShort() Helper Method"},"headers":[{"level":2,"title":"Import","slug":"import"},{"level":2,"title":"Arguments","slug":"arguments"},{"level":2,"title":"Use Example","slug":"use-example"},{"level":2,"title":"Module Code","slug":"module-code"}],"relativePath":"modules/helpers/random-hex-short.md","lastUpdated":1659888523000}'),_={name:"modules/helpers/random-hex-short.md"},S=Object.assign(_,{setup(f){return(a,g)=>(p(),t("div",null,[s("h1",c,[n(l(a.$frontmatter.title)+" ",1),i]),s("p",null,"The "+l(a.$frontmatter.title)+' module returns a randomized and formatted "shorthand" hex code.',1),s("div",y,[F,s("p",null,[n("When using the "+l(a.$frontmatter.title)+" to generate a random shorthand hex code, the nature of shortened hex codes means that the normal range of RGB color space colors (16,777,216 colors) is ",1),d,D,m,A])]),u,h,s("p",null,"To import the "+l(a.$frontmatter.title)+":",1),C,s("p",null,"The "+l(a.$frontmatter.title)+" does not have any arguments.",1),b,r(e)]))}});export{E as __pageData,S as default};
