import{_ as r}from"./chunks/DocsPackageVersion.vue_vue_type_script_setup_true_lang.4265c43f.js";import{V as l}from"./chunks/VvButton.8ce5c836.js";import{o as c,c as i,a as s,b as n,t as d,d as a,w as e,u as t,e as o}from"./app.7595295d.js";import"./chunks/VvConfig.1bf76bdf.js";import"./chunks/Anchors.bafcf40e.js";import"./chunks/Text.d88c79dd.js";import"./chunks/Transitions.262fdc37.js";import"./chunks/Buttons.b4b40e12.js";import"./chunks/Checkboxes.81ecc6c3.js";import"./chunks/ColorModes.4904e81c.js";import"./chunks/Inputs.a721047f.js";import"./chunks/Listboxes.3c490966.js";import"./chunks/Lists.c1360393.js";import"./chunks/Radios.230b40d2.js";import"./chunks/Selects.7f4e72d6.js";import"./chunks/Textareas.4dc66c13.js";const u={id:"frontmatter-title",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),y=o(`<p>Now that everything is wired up, let&#39;s test drive the VvButton component.</p><h2 id="import-vvbutton" tabindex="-1">Import VvButton <a class="header-anchor" href="#import-vvbutton" aria-hidden="true">#</a></h2><p>First we&#39;ll open up the <code>./src/components/HelloWorld.vue</code> component, and import the <code>VvButton</code> component:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VvButton</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@obewds/vueventus</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Next up, we can add our <code>VvButton</code> instance in the HelloWorld.vue SFC file <code>&lt;template&gt;</code> tag:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        VvButton</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,6),F={class:"w-full py-4 text-center"},m=o(`<p>You should now see a button with default Tailwind CSS button classes like the one above!</p><h2 id="using-the-color-prop" tabindex="-1">Using the Color Prop <a class="header-anchor" href="#using-the-color-prop" aria-hidden="true">#</a></h2><p>Next, let&#39;s change the color rapid prototyping style:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">color</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">secondary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        VvButton</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,4),b={class:"w-full py-4 text-center"},h=o(`<h2 id="using-the-palette-prop" tabindex="-1">Using the Palette Prop <a class="header-anchor" href="#using-the-palette-prop" aria-hidden="true">#</a></h2><p>Looking better! Next, let&#39;s switch our primary color button to an outline button color palette:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">palette</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">outline</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        VvButton</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,3),_={class:"w-full py-4 text-center"},v=o(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>So that&#39;s how colors and palettes work. Palettes are overall styling groups or themes, while colors are key/value pairs where the key describes the value and the value is a group of Tailwind CSS classes. Like <code>color=&quot;primary&quot;</code>, <code>color=&quot;error&quot;</code> or <code>color=&quot;success&quot;</code>, etc.</p></div><h2 id="adding-classes" tabindex="-1">Adding Classes <a class="header-anchor" href="#adding-classes" aria-hidden="true">#</a></h2><p>Next, let&#39;s switch back to a solid color palette by dropping the <code>palette</code> attribute (the default palette of the VvButton component is <code>&#39;solid&#39;</code> and the default color is <code>&#39;primary&#39;</code>). And let&#39;s add some rounded corners to our solid primary button, too:</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rounded-lg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        VvButton</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">VvButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,4),g={class:"w-full py-4 text-center"},C=s("p",null,"Your VvButton component instance should now be a solid primary colored button with rounded corners!",-1),W=JSON.parse('{"title":"Test Drive: VvButton","description":"","frontmatter":{"title":"Test Drive: VvButton"},"headers":[{"level":2,"title":"Import VvButton","slug":"import-vvbutton","link":"#import-vvbutton","children":[]},{"level":2,"title":"Using the Color Prop","slug":"using-the-color-prop","link":"#using-the-color-prop","children":[]},{"level":2,"title":"Using the Palette Prop","slug":"using-the-palette-prop","link":"#using-the-palette-prop","children":[]},{"level":2,"title":"Adding Classes","slug":"adding-classes","link":"#adding-classes","children":[]}],"relativePath":"guides/test-drive-vv-button.md","lastUpdated":1655560850000}'),A={name:"guides/test-drive-vv-button.md"},Y=Object.assign(A,{setup(V){return(p,f)=>(c(),i("div",null,[s("h1",u,[n(d(p.$frontmatter.title)+" ",1),D]),y,s("div",F,[a(t(l),null,{default:e(()=>[n(" VvButton ")]),_:1})]),m,s("div",b,[a(t(l),{color:"secondary"},{default:e(()=>[n(" VvButton ")]),_:1})]),h,s("div",_,[a(t(l),{palette:"outline",class:"border-solid"},{default:e(()=>[n(" VvButton ")]),_:1})]),v,s("div",g,[a(t(l),{class:"rounded-lg"},{default:e(()=>[n(" VvButton ")]),_:1})]),C,a(r)]))}});export{W as __pageData,Y as default};
