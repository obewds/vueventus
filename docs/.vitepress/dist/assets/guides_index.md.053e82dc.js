import{_ as s,o as i,c as a,a as t,b as n,t as o,e as l}from"./app.0b0c97f6.js";const V='{"title":"Getting Started","description":"","frontmatter":{"title":"Getting Started"},"headers":[{"level":2,"title":"Installation Guides","slug":"installation-guides"}],"relativePath":"guides/index.md","lastUpdated":1654344998000}',r={name:"guides/index.md"},d={id:"frontmatter-title",tabindex:"-1"},c=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),u=l('<p>Welcome to the VueVentus design system component docs!</p><p>You&#39;ll find lots of information and insight here covering how to use the VueVentus data flows in the contexts of Vue.js, to end the era of massive atomic class strings.</p><h2 id="installation-guides" tabindex="-1">Installation Guides <a class="header-anchor" href="#installation-guides" aria-hidden="true">#</a></h2><p>But first, you&#39;ll need to choose your path for installation:</p><ul><li><a href="/vueventus/guides/install-vite.html">Install with Vite.js</a></li><li><a href="/vueventus/guides/install-vue-cli.html">Install with Vue CLI</a></li><li><a href="/vueventus/guides/install-vilt-stack.html">Install with VILT Stack</a></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>VueVentus is not currently written with Typescript. There are some components like VueVentus&#39;s <code>VvEl</code> and <code>VvConfig</code> that were written in Typescript, but some pesky bugs pushed this project back into normal Vue 3 SFCs and the composition API to move forward. \xAF\\<em>(\u30C4)</em>/\xAF</p></div>',6);function h(e,p,m,_,f,g){return i(),a("div",null,[t("h1",d,[n(o(e.$frontmatter.title)+" ",1),c]),u])}var w=s(r,[["render",h]]);export{V as __pageData,w as default};
