import{_ as p}from"./chunks/DocsPackageVersion.ebb5be6e.js";import{o,c as r,a as s,b as e,t as n,d as t,e as l}from"./app.34b0f6ed.js";const c={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),y=s("h2",{id:"import",tabindex:"-1"},[e("Import "),s("a",{class:"header-anchor",href:"#import","aria-hidden":"true"},"#")],-1),D=l("",1),F=l("",3),_=JSON.parse('{"title":"uniqueArray() Helper Method","description":"","frontmatter":{"title":"uniqueArray() Helper Method"},"headers":[{"level":2,"title":"Import","slug":"import"},{"level":2,"title":"Use Example","slug":"use-example"}],"relativePath":"modules/helpers/unique-array.md","lastUpdated":1655667322000}'),C={name:"modules/helpers/unique-array.md"},b=Object.assign(C,{setup(A){return(a,u)=>(o(),r("div",null,[s("h1",c,[e(n(a.$frontmatter.title)+" ",1),i]),s("p",null,"The "+n(a.$frontmatter.title)+" module provides a helper function that takes an array as an argument and returns a new array with any duplicate values in the argument array removed.",1),y,s("p",null,"To import the compiled library version of the "+n(a.$frontmatter.title)+":",1),D,s("p",null,"To import the "+n(a.$frontmatter.title)+" directly:",1),F,t(p)]))}});export{_ as __pageData,b as default};
